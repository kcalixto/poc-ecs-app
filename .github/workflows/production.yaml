name: Production
on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  IMAGE_NAME: 'sample_app'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.1

      - name: Lint
        run: go vet ./...

      - name: Test
        run: go test ./...

  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: New tag
        id: create_tag
        uses: anothrNick/github-tag-action@1.61.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'sa-east-1'

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.ecr.outputs.registry }}/${{ inputs.image-name }}
          tags: |
            type=raw,value=${{ steps.create_tag.outputs.new_tag }}
            type=raw,value=latest
            type=sha,format=short

      - name: Build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GIT_VERSION_TAG=${{ steps.create_tag.outputs.new_tag }}
            GH_ACCESS_TOKEN=${{ secrets.GH_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Deploy CDK Stack
        env:
          IMAGE_TAG: ${{ steps.create_tag.outputs.new_tag }}
          REPOSITORY_NAME: ${{ env.IMAGE_NAME }}
        run: |
          cd infra
          npm ci
          npx cdk bootstrap --require-approval never
          npx cdk deploy PocECSAppStack --require-approval never --parameters repositoryName=${REPOSITORY_NAME} --parameters imageTag=${IMAGE_TAG}
