name: "Build and Publish"

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      tag:
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24.1

    - name: Lint
      run: go vet ./...

    - name: Test
      run: go test ./...

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'sa-east-1'

    - name: Login to Amazon ECR
      id: ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set up docker buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ steps.ecr.outputs.registry }}/${{ inputs.image-name }}
        tags: |
          type=raw,value=${{ inputs.tag }}

    - name: Debug metadata
      run: |
        echo "Tags: ${{ steps.meta.outputs.tags }}"
        echo "Input tag: ${{ inputs.tag }}"
        echo "Image name: ${{ env.IMAGE_NAME }}"

    - name: Build and push docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        labels: ${{ steps.meta.outputs.labels }}
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          GIT_VERSION_TAG=${{ inputs.tag }}
          GH_ACCESS_TOKEN=${{ secrets.GH_TOKEN }}
